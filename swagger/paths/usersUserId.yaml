/users/{userId}:
  get:
    operationId: getUserById
    summary: "Get user by ID"
    tags:
      - User
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    responses:
      '200':
        description: "User found"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '404':
        description: "User not found"
      default:
        description: "successful operation"

  put:
    operationId: updateUserById
    summary: "Update user by ID"
    tags:
      - User
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUserRequest'
    responses:
      '200':
        description: "User updated"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '404':
        description: "User not found"
      default:
        description: "successful operation"

  delete:
    operationId: deleteUserById
    summary: "Delete User by ID"
    tags:
      - User
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    responses:
      '204':
        description: "User deleted"
      '404':
        description: "User not found"
      default:
        description: "successful operation"