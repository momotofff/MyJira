components:
  schemas:
    TaskStatus:
      type: string
      enum: [ Pending, Active, Resolved, Closed ]
      example: "Pending"

    TaskPriority:
      type: string
      enum: [ Low, Medium, High, Critical ]
      example: "Medium"

    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "Задача 1"
        description:
          type: string
          example: "Описание задачи 1"
        status:
          $ref: "#/components/schemas/TaskStatus"
        priority:
          $ref: "#/components/schemas/TaskPriority"
        author:
          type: string
          example: "Автор Задачи"
        assignee:
          type: string
          example: "Исполнитель Задачи"

    CreateTaskRequest:
      type: object
      required:
        - title
        - description
        - status
        - priority
        - author
        - assignee
      properties:
        title:
          type: string
          example: "Новая задача"
        description:
          type: string
          example: "Описание новой задачи"
        status:
          $ref: "#/components/schemas/TaskStatus"
        priority:
          $ref: "#/components/schemas/TaskPriority"
        author:
          type: string
          example: "Автор"
        assignee:
          type: string
          example: "Исполнитель"

    UpdateTaskRequest:
      type: object
      properties:
        title:
          type: string
          example: "Обновленное название задачи"
        description:
          type: string
          example: "Обновленное описание задачи"
        status:
          $ref: "#/components/schemas/TaskStatus"
        priority:
          $ref: "#/components/schemas/TaskPriority"
          example: "Low"
        author:
          type: string
          example: "Обновленный автор"
        assignee:
          type: string
          example: "Обновленный исполнитель"