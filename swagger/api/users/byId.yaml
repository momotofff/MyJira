paths:
  /users/by-id/{userId}:
    get:
      operationId: getUserById
      summary: "Get user by ID"
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "User found"
          content:
            application/json:
              schema:
                $ref: '../../schemas/user.yaml#/components/schemas/User'
        '404':
          description: "User not found"
        '500':
          description: "Internal server error"

    put:
      operationId: updateUserById
      summary: "Update user by ID"
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../../schemas/user.yaml#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: "User updated"
          content:
            application/json:
              schema:
                $ref: '../../schemas/user.yaml#/components/schemas/User'
        '404':
          description: "User not found"
        '500':
          description: "Internal server error"

    delete:
      operationId: deleteUserById
      summary: "Delete user by ID"
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "User deleted"
        '500':
          description: "Internal server error"
